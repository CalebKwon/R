#################################################
##################### 참고 서적####################
#################################################

# http://rstudio-pubs-static.s3.amazonaws.com/24275_7554c7b09c5c4a7fb85801316a6955cc.html
# http://www.ats.ucla.edu/stat/r/gbe/histogram.htm
# http://www.ats.ucla.edu/stat/r/gbe/boxplot.htm
# http://www.ats.ucla.edu/stat/r/gbe/scatter.htm
# http://www.ats.ucla.edu/stat/r/gbe/ggplot_boxplot.htm
# https://plot.ly/r/line-and-scatter/
# http://www2.warwick.ac.uk/fac/sci/moac/people/students/peter_cock/r/iris_plots/
# Scatter plot, ggplot2
# http://www.sthda.com/english/wiki/ggplot2-scatter-plots-quick-start-guide-r-software-and-data-visualization
# histogram, ggplot2
# http://www.r-bloggers.com/how-to-make-a-histogram-with-ggplot2/
# http://www.cookbook-r.com/Graphs/Plotting_distributions_(ggplot2)/
# http://www.sthda.com/english/wiki/ggplot2-histogram-plot-quick-start-guide-r-software-and-data-visualization
# http://www.sthda.com/english/wiki/ggplot2-histogram-easy-histogram-graph-with-ggplot2-r-package
# http://datamining.dongguk.ac.kr/R/R%EC%9D%98%EC%84%A4%EC%B9%98%EB%B0%8F%EA%B8%B0%EB%B3%B8%EC%82%AC%EC%9A%A9%EB%B2%95.pdf
# https://www.youtube.com/watch?v=rqrrTfy-z-c

### public dataset
### what to do : https://www.data.go.kr/#/L21haW4=
### what to do : http://data.seoul.go.kr/

# 스타벅스 매장 전략
# http://m.dongabiz.com/Business/Marketing/content.php?atno=1202054701&chap_no=1&sdkey=14424653996&user=dep#TOP


# R 기초
# 변수와 벡터 생성

1+1


# 
a+x

a<-1
x<-3

a+x


a

a * 5

x

10^3 + 36

(3+4+5)/3


ki<-c(170,171,172,173,174,175,176)

vec1 = c(1,4,6,8,10)

vec1

vec1[5]


vec2 = seq(from=0, to=1, by=0.25)

vec2

sum(vec1)/5


mean(vec1)

vec1 + vec2

x = c(1,2,3,4,5)
y = c(-1,-2,-3,-4,-5)

x+y

x * y

y <- rep(1:5, 3)


x=c("Yes","No","No","Yes","Yes")
table(x)

a<-c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

# 평균을 구한다.
# mean(a) 

#중앙값을 구한다.
# median(a)

# 분산을 구한다.
# var(a)

#표준평차를 구한다.
# sd(a)

# 범위를 구한다. 
# range = max(a) - min(a)

####################################################
################ Q. 아래 각각의 코드의 답은? #############
####################################################

x = c(1,3,5,7,9)
y = c(2,3,5,7,11,13) 

#	1.	 x+1
#	2.	 y*2
#	3.	length(x) and length(y)
#	4.	 x + y
#	5.	sum(x>5) 
#  6. sum(x[x>5])
#	7.	sum(x<7 & x> 3) # read | as 'or', & and 'and'
#	8.	y[3]
#	9.	y[-3]
#	10. y[x] (What is NA?)
#	11.	y[y>=7]

y<-c(1,2,3,4,5,6,7,8,9,10)
x<-c(10,20,30,40,50,60,70,80,90)
x[y]
x[-3]

# matrices are nothing more than 2-dimensional vectors.
mat=matrix(data=c(9,2,3,4,5,6),ncol=3)

# data frame
t = data.frame(x = c(11,12,14), y = c(19,20,21), z = c(10,9,7))

t$z

mean(t$z)

# Character
# To tell R that something is a character string, you should type the text between apostrophes, otherwise R will start looking for a defined variable with the same name
m = "apples"

m


n = pears # why error?

# paste
x <- c("a", "b", "c", "d")
y <- c("w", "x", "y", "z")

paste(x,y)
paste(x, y, sep="%%")
paste(x, y, sep="%%", collapse=",")


# substr
substr("BigDataAnalysis",1,4)
substr("19971104",1,4)

data(iris)
iris

dim(iris)

colnames(iris)
rownames(iris)
names(iris)
head(iris)

#
iris1<-iris[1:75,]
iris2<-iris[76:150,]
r<-rbind(iris1,iris2)
#
iris1<-iris[,1:3]
iris2<-iris[,4:5]
c<-cbind()


# R- Basic Graphic
# scatterplot
hsb2 <- read.table('http://www.ats.ucla.edu/stat/r/modules/hsb2.csv', header=T, sep=",")

hsb2$race

attach(hsb2)
race

# 산점도
plot(read, write)
names(hsb2)
cor(read, write)

#
plot(math, write)
abline(lsfit(write, math))

#alternatively
plot(math, write)
fit<-lm(write ~ math)
abline(fit)


# pch for plotting characters, or symbol to use
# see help(points) for more information on pch

hsb2

hsb2_female<-hsb2[female==1,]
hsb2_male<-hsb2[female==0,]
with(hsb2_female, plot(math, write, pch=20, col="darkred"))
with(hsb2_male, points(math, write, pch=20, col="darkblue"))


# race 별로 점을 찍어 봅시다.
# race == 1
# race == 2
# race == 3
# race == 4 


# alternatively 
math_male<-hsb2$math[female==0]
write_male<-hsb2$write[female==0]
math_female<-hsb2$math[female==1]
write_female<-hsb2$write[female==1]

plot(math_female, write_female, type="p", 
     pch=20, col="darkred")
points(math_male, write_male, pch=22, col="darkblue")


# adding legend 
hsb2_female<-hsb2[female==1,]
hsb2_male<-hsb2[female==0,]
with(hsb2_female, plot(math, write, pch=20, 
     col="darkred", ylim=c(25, 70)))
with(hsb2_male, points(math, write, pch=22, 
     col="darkblue"))
legend(65, 35, c("female", "male"), pch=c(20, 22), 
       cex=.8, col=c("darkred", "darkblue"))


# male vs female
math_male<-hsb2$math[female==0]
write_male<-hsb2$write[female==0]
math_female<-hsb2$math[female==1]
write_female<-hsb2$write[female==1]
plot(math_female, write_female, type="p", pch=20,
     col="darkred", ylim=c(25, 70))
points(math_male, write_male, pch=22, col="darkblue")
abline(lsfit(write_female, math_female), col="darkred")
abline(lsfit(write_male, math_male), col="darkblue")
legend(65, 35, c("female", "male"), pch=c(20, 22), 
       cex=.8, col=c("darkred", "darkblue"))

# race의 math와 write의 산점도, 추세선, 레전드 그려보기
math_race1<-hsb2$math[race==1]
write_race1<-hsb2$write[race==1]
math_race2<-hsb2$math[race==2]
write_race2<-hsb2$write[race==2]
math_race3<-hsb2$math[race==3]
write_race3<-hsb2$write[race==3]
math_race4<-hsb2$math[race==4]
write_race4<-hsb2$write[race==4]



# boxplot
data<-data.frame(Stat11=rnorm(100,mean=3,sd=2),
Stat21=rnorm(100,mean=4,sd=1),
Stat31=rnorm(100,mean=6,sd=0.5),
Stat41=rnorm(100,mean=10,sd=0.5),
Stat12=rnorm(100,mean=4,sd=2),
Stat22=rnorm(100,mean=4.5,sd=2),
Stat32=rnorm(100,mean=7,sd=0.5),
Stat42=rnorm(100,mean=8,sd=3),
Stat13=rnorm(100,mean=6,sd=0.5),
Stat23=rnorm(100,mean=5,sd=3),
Stat33=rnorm(100,mean=8,sd=0.2),
Stat43=rnorm(100,mean=4,sd=4))

# Basic
boxplot(data)

# arrange variable names vertically
boxplot(data, las = 2)

# 
boxplot(data, las = 2, names = c(“Station 1”,“Station 2”,“Station 3”,“Station 4”,“Station 1”,“Station 2”,“Station 3”,“Station 4”,“Station 1”,“Station 2”,“Station 3”,“Station 4”))

# title
boxplot(data, ylab =“Oxigen (%)”, xlab =“Time”,las = 2, names = c(“Station 1”,“Station 2”,“Station 3”,“Station 4”,“Station 1”,“Station 2”,“Station 3”,“Station 4”,“Station 1”,“Station 2”,“Station 3”,“Station 4”))


hsb2 <- read.table('http://www.ats.ucla.edu/stat/r/modules/hsb2.csv', header=T, sep=",")
attach(hsb2)

# Basic
boxplot(write)

#
boxplot(write, xlab="write", boxwex=.4, 
        col="darkblue")


# 그룹(남녀, SES, race)간 상이한 분포, 위상을 보이는 
# 과목 찾기, 다른 4가지 과목에도 적용 
boxplot(write ~ ses)


# Histogram
u <- rnorm(1000)
#default histogram
hist(u)

#with shading
hist(u, density=20)

#with specific number of bins
hist(u, density=20, breaks=20)

# proportion, instead of frequency
# also specifying y-axis
hist(u, density=20, breaks=-3:3, 
     ylim=c(0,.5), prob=TRUE)

hist(u, density=20, prob=TRUE)


# overlay normal curve with x-lab and ylim
# colored normal curve
m<-mean(u)
std<-sqrt(var(u))
hist(u, density=20, breaks=20, prob=TRUE, 
xlab="x-variable", ylim=c(0, 0.7), 
main="normal curve over histogram")
curve(dnorm(x, mean=m, sd=std), 
      col="darkblue", lwd=2, add=TRUE)

hist(u, density=20, breaks=20, prob=TRUE, 
xlab="x-variable", ylim=c(0, 0.8),
main="Density curve over histogram") 
lines(density(u), col = "blue")

# hist(u) is an object
# names(uh) will show all of its components
uh<-hist(u)
plot(uh, ylim=c(0, 40), col="lightgray", 
     xlab="", main="Histogram of u")
text(uh$mids, uh$counts+2, label=c(uh$counts))


1-pnorm(330,m=280,sd=40)

# Data Manipulation
# Play with data set
install.packages("car")
library(car)
data(mtcars)
newdata<-mtcars[,c(1,3,4,5,6)]
plot(newdata)
cor(newdata)
class(mtcars$vs)
dim(mtcars)
head(mtcars)
attributes(mtcars)
names(mtcars)
rownames(mtcars)

mtcars$gear
attach(mtcars)
gear
mtcars["Fiat 128",]

# am 오토메틱, 메뉴얼
mtcars$am<-as.factor(mtcars$am)
mtcars$vs<-as.factor(mtcars$vs)
summary(mtcars)

# 조건을 둔 추출
mtcars[which.max(mtcars$mpg),]
mtcars[which.min(mtcars$wt),]

# 데이터 정리
aggregate(mpg~gear, data=mtcars, FUN="mean")
aggregate(mpg~gear, data=mtcars, FUN="sd")



# help(aggregate)
# http://www.uni-kiel.de/psychologie/rexrepos/posts/aggregate.html

# 산점도 Plot
plot(mtcars)
attach(mtcars)

plot(hp~mpg)
plot(cyl~mpg)

# pie chart
table(mtcars$am)
auto=mtcars$am
matic=table(auto)
pie(matic)
auto=mtcars$gear
matic=table(auto)
pie(matic)



###################################################################################
############################ 날씬한 몸매를 원한다! 어떤 시리얼을 골라야 할까? ###############
###################################################################################
library(MASS)
data(UScereal)
head(UScereal)
UScereal
dim(UScereal)
names(UScereal)
attach(UScereal)

##########################################
###################변수 설명################
##########################################
# mfr=manufacturer
# calories= number of calories in one protion
# protein=grams of protein in one portion
# fat=frams of fat in one portion
# sodium=miligrams of sodium in one portion
# fibre=grams of dietary fibre in one portion
# carbo=grams of complex carbohydrates in one portion
# sugars=grams of sugars in one portion
# shelf=display shelf(1,2, or 3, counting )
# potassium=grams of potassium
# vitamins=vitamins and minerals(none, enriched, or 100%)

names(UScereal)
# 관심있는 변수 6개를 택해보자. 자신을 식품 관련 연구원(국민에게 건강한 식품을 제안해야 하는 )
# 각각의 변수에 대해 아래 값을 구해보자. 
# 평균을 구한다.
# mean(a) 

#중앙값을 구한다.
# median(a)

# 분산을 구한다.
# var(a)

#표준평차를 구한다.
# sd(a)

# 범위를 구한다. 
# range = max(a) - min(a)

# plot 
# 변수들 중 관심있는 관계를 4개 그려보자. 

# histogram
# 산점도에 그렸던 변수들의 각각의 histogram을 그려보자. 


# box plot
# 산점도에 그렸던 변수들의 각각의 box plot를 그려보자. 

library(MASS)
data(UScereal)
attach(UScereal)
dim(UScereal)
head(UScereal)


UScerealCPrS<-UScereal[,c(2,3,5,8)]

plot(UScerealCPrS)
head(UScerealCPrS)

UScerealonetofour<-UScereal["Wheaties",1:4]

head(UScerealonetofour)

UScerealonetoten<-UScereal[1:20,]

UScerealmfrG<-UScereal[UScereal$mfr=="G",]
UScerealmfrG.1<-UScereal[UScereal$mfr=="G",c(1,3,7)]

UScerealmfrGKP<-UScereal[UScereal$mfr%in%c("G","K","P"),]

UScerealGHsugar<-UScereal[with(UScereal, mfr=="G"& sugars>mean(sugars)),]

UScereal[with(UScereal, mfr=="P"& calories>mean(calories)),]
Gsodi<-UScereal[with(UScereal, mfr=="G"& sodium>mean(sodium)),]

# sodium,calories, protein
Gsodiscp<-Gsodi[,c(5,2,3)]
plot(Gsodiscp)
cor(Gsodiscp)

names(UScereal)

with(UScereal, mfr=="G"& sugars>15)
UScereal[with(mfr=="G"& sugars>15),]
UScereal[mfr=="G"& sugars>15,]
sugars.10<-subset(UScereal,sugars>10)
subset(UScereal,sugars<10)
names(UScereal)

HsugarsLcalories<-subset(UScereal,sugars>10&calories<120)
HsugarsLcalories.1<-subset(UScereal,sugars>10&calories<120,select=c(sugars,calories))
HsugarsLcalories.2<-subset(UScereal,sugars>10&calories<120,select=mfr:protein)

#############다이어트와 관련된 영양소를 찾아보자###############
#### 1) calories
#### 2) protein
#### 3) sugars
#### 4) fibre

# 1) calories
mean(calories)
min(calories)
max(calories)
summary(calories)
hist(calories)$counts

hist(calories,breaks=30, main="Calories",col="red")
# http://stackoverflow.com/questions/9317948/how-to-label-histogram-bars-with-data-values-or-percents-in-r
help(hist)

# 2)

# 3)

# 4)

########## 여러개의 그래프를 한 페이지에#############
par(mfrow=c(1,3))
hist(calories,breaks=30,, main="Calories",col="red")
hist(fat,breaks=30, main="Fat",col="red")
hist(sugars,breaks=30, main="Sugars",col="red")
 

############ sugars, fat, and calories를 전체 평균보다 중간 이하 포함한 제품을 찾아라.
# Condition
sugL<-subset(UScereal,sugars<mean(sugars))
sugLcalL<-subset(sugL,sugL$calories<mean(sugL$calories))
sugLcalLfatL<-subset(sugLcalL,sugLcalL$fat<mean(sugLcalL$fat))

############# Sugars, fat, and calories 모두가 전체 평균보다 중간보다 큰 제품을 찾아라.
sugH<-subset(UScereal,sugars>mean(sugars))
sugHcalH<-subset(sugH,sugH$calories>mean(sugH$calories))
sugHcalHfatH<-subset(sugHcalH,sugHcalH$fat>mean(sugHcalH$fat))

# 비교
summary(sugLcalLfatL)
summary(sugHcalHfatH)


# 비교
summary(sugLcalLfatL)
summary(sugHcalHfatH)


# 들어가기전에 생긴 RQ1. 의사가 말하길 이 세가지 영양소가 나의 건강에 좋지 않을거라 했다. 되도록 이들 영양소를 최소한으로 섭취하고 싶다.
# 이 세 영양소들은 어떤 상관관계인가? 강한 상관관계라면 이 세가지 중 한가지를 고려하여(가장 작은 함유량 서택) 
# 자동적으로 다른 영양소도 적게 함유하게 된다. 결국 셋중에 하나만 고려해도 된다. 아니라면 선택이 복잡해진다. 
# fat은 적은데 sugars가 많다면....? 쉽게 골라보자. 

plot(calories,fat)
text(calories,fat,labels=row.names(UScereal),pos=4, cex=0.6, col="blue")

plot(calories,sugars)
text(calories,sugars,labels=row.names(UScereal),pos=4, cex=0.6, col="red")

plot(sugars,fat)
text(sugars,fat,labels=row.names(UScereal),pos=4, cex=0.6, col="black")

# Brand Name 
plot(calories,fat,main="Nutrition",xlab="Calories", ylab="Fat")
text(calories,fat,labels=mfr,pos=4, cex=0.6, col="red")

plot(calories,sugars,main="Nutrition",xlab="Calories", ylab="Sugars")
text(calories,sugars,labels=mfr,pos=4, cex=0.6, col="red")

plot(sugars,fat,main="Nutrition",xlab="Sugars", ylab="Fat")
text(sugars,fat,labels=mfr,pos=4, cex=0.6, col="red")

par(mfrow=c(1,3))
plot(calories,fat,main="Nutrition",xlab="Calories", ylab="Fat")
text(calories,fat,labels=mfr,pos=4, cex=0.6, col="red")
plot(calories,sugars,main="Nutrition",xlab="Calories", ylab="Sugars")
text(calories,sugars,labels=mfr,pos=4, cex=0.6, col="red")
plot(sugars,fat,main="Nutrition",xlab="Sugars", ylab="Fat")
text(sugars,fat,labels=mfr,pos=4, cex=0.6, col="red")

# 제조사
plot(calories,fat, pch=21,main="Nutrition",xlab="Calories", ylab="fat",bg=c("red","yellow","green","blue","black","pink")[unclass(mfr)])
text(calories,fat,labels=mfr,pos=4, cex=0.6, col="red")

plot(calories,sugars, pch=21, main="Nutrition",xlab="Calories", ylab="sugars",bg=c("red","yellow","green","blue","black","pink")[unclass(mfr)])
text(calories,sugars,labels=mfr,pos=4, cex=0.6, col="red")

plot(sugars,fat, pch=21, main="Nutrition",xlab="sugars", ylab="fat",bg=c("red","yellow","green","blue","black","pink")[unclass(mfr)])
text(sugars,fat,labels=mfr,pos=4, cex=0.6, col="red")
 
# ploting with different shape
plot(calories,fat,pch=c(21,22,23,24,25,26)[unclass(mfr)],main="Nutrition",xlab="Calories", ylab="fat",bg=c("red","yellow","green","blue","black","pink")[unclass(mfr)])
text(calories,fat,labels=mfr,pos=4, cex=0.6, col="red")
c(21,22,23,24,25,26)[unclass(mfr)]  
 
# arrange three graphs in one page
par(mfrow=c(1,2))  
plot(calories,fat,main="Nutrition",xlab="Calories", ylab="Fat")
text(calories,fat,labels=mfr,pos=4, cex=0.6, col="red")
plot(calories,fat,main="Nutrition",xlab="Calories", ylab="Fat", pch=21, bg=c("red","yellow","green","blue","black","pink")[unclass(mfr)])

par(mfrow=c(1,2))  
plot(calories,sugars,main="Nutrition",xlab="Calories", ylab="Sugars")
text(calories,sugars,labels=mfr,pos=4, cex=0.6, col="red")
plot(calories,sugars,main="Nutrition",xlab="Calories", ylab="Sugars", pch=21, bg=c("red","yellow","green","blue","black","pink")[unclass(mfr)])

par(mfrow=c(1,2))  
plot(sugars,fat,main="Nutrition",xlab="Sugars", ylab="Fat")
text(sugars,fat,labels=mfr,pos=4, cex=0.6, col="red")
plot(sugars,fat,main="Nutrition",xlab="Sugars", ylab="Fat", pch=21, bg=c("red","yellow","green","blue","black","pink")[unclass(mfr)])

# Calories, Sugars, Fat 서로 상관 관계가 있는듯 보인다. 좀 더 정확히 확인해봅시다. 

# Correlation Graph
pairs(~calories+fat+sugars,data=UScereal, main="Simple Scatterplot Matrix")
plot(~calories+fat+sugars,data=UScereal, main="Simple Scatterplot Matrix")

help(pairs)
help(plot)
library(car)
scatterplot.matrix(~calories+fat+sugars|mfr, data=UScereal,main="Scatterplot")

# 3D Scatterplot
install.packages("scatterplot3d")
install.packages("rgl")

library(scatterplot3d)
scatterplot3d(calories,fat,sugars, main="3D Scatterplot")

library(rgl)
plot3d(calories,fat,sugars, col="red", size=3)

library(Rcmdr)
library(RcmdrMisc)
library(sandwich)
attach(UScereal)
scatter3d(calories,fat,sugars)

###### 잘나가는 패키지 찾기
####### http://awesome42.com/

###
library(car)
data(mtcars)
mtcars[grep("Merc", rownames(mtcars)), ]

# sort by mpg and cyl
newdata <- mtcars[order(mpg, cyl),]

#sort by mpg (ascending) and cyl (descending)
newdata <- mtcars[order(mpg, -cyl),] 


mpg
max(mpg)

min(mpg)
mean(mpg)
summary(mpg)

table(cyl)
barplot(table(cyl))

stem(mpg)

boxplot(mpg)

mpg[cyl==4]
mean(mpg[cyl==4])

mpg[cyl==6]
mean(mpg[cyl==6])


# X <- c(rep(65, times=5), rep(25, times=5), rep(35, times=10), rep(45, times=4))
# hist(X, prob=TRUE, col="grey")# prob=TRUE for probabilities not counts
# lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
# lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)



hist(mpg)
hist(mpg,breaks=20)
hist(mpg,breaks=10,col="blue")
hist(mpg,breaks=10,col="red",xlab="Miles Per Gallon")
hist(mpg,breaks=10,col="red",xlab="Miles Per Gallon",main="Histogram Of MPG")


# density curve
d <- density(mpg) # returns the density data 
plot(d)
plot(d,xlab="Miles Per Gallon",main="Density Of MPG")
#polygon(d, col="red", border="blue")
polygon(d, col="blue", border="red")

plot(wt,mpg)
cor(wt,mpg)
plot(wt, mpg) 
abline(lm(mpg~wt))
lines(lowess(wt,mpg), col="red") # lowess line (x,y)
title("Regression of MPG on Weight")

plot(mpg, type="o", col="blue")


fourcyl<-mpg[cyl==4]
eightcyl<-mpg[cyl==8]

plot(fourcyl,type="o", col="blue", ylim=c(10,40),ylab="Miles Per Gallon")
lines(eightcyl,type="o", pch=22, lty=2, col="red")
title(main="mpg", col.main="red", font.main=4)
g_range <- range(0, fourcyl, eightcyl)
legend(1, g_range[2], c("Fourcyl","Eightcyl"), cex=1, 
   col=c("blue","red"),lty=1:2)

cyltable<-table(cyl)
cyltable 
labs<- paste("(",names(cyltable),")", "\n", cyltable, sep="")
pie(cyltable, labels = labs, col = c("red", "yellow", "blue"),main="PIE CHART OF CYLINDER NUMBERS\n with sample sizes")
attach(mtcars)
par(mfrow=c(2,2))
plot(wt,mpg, main="Scatterplot of wt vs. mpg")
plot(wt,disp, main="Scatterplot of wt vs disp")
hist(wt, main="Histogram of wt")
boxplot(wt, main="Boxplot of wt")

# Add boxplots to a scatterplot
par(fig=c(0,0.8,0,0.8), new=TRUE)
plot(mtcars$wt, mtcars$mpg, xlab="Car Weight",
  ylab="Miles Per Gallon")
par(fig=c(0,0.8,0.55,1), new=TRUE)
boxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$mpg, axes=FALSE)
mtext("Enhanced Scatterplot", side=3, outer=TRUE, line=-3)

# Basic Scatterplot Matrix
pairs(~mpg+disp+drat+wt,data=mtcars, 
   main="Simple Scatterplot Matrix")

# 3D Scatterplot
library(scatterplot3d)
attach(mtcars)
scatterplot3d(wt,disp,mpg, main="3D Scatterplot")


library(rgl)
plot3d(wt, disp, mpg, col="red", size=3)

require(graphics)

pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
       panel = panel.smooth, rows = 1)
       
# export to excel
# write.csv(UScereal, "/Users/byounggugkwon/Desktop/untitled/mydata.csv")

# Legend Example
attach(mtcars)
boxplot(mpg~cyl, main="Milage by Car Weight",
   yaxt="n", xlab="Milage", horizontal=TRUE,col=terrain.colors(3))
legend("topright", inset=.05, title="Number of Cylinders",
   c("4","6","8"), fill=terrain.colors(3), horiz=TRUE)



# 선형분석
# Pratice with data!
# http://tutorials.iq.harvard.edu/R/Rstatistics/Rstatistics.html#orgheadline7
# working directory설정하고 그 안의 데이터 사용하기

getwd()
setwd("/Users/byounggugkwon/Dropbox/Statlecture/24H")
list.files("dataSets")

states.data <- readRDS("dataSets/states.rds") 
# read the states data
states.data <- readRDS("dataSets/states.rds") 
#get labels
states.info <- data.frame(attributes(states.data)[c("names", "var.labels")])
attach(states.data)
#  [1] "state"   "region"  "pop"     "area"    "density" "metro"   "waste"   "energy"  "miles"   "toxic"   "green"   "house"   "senate" 
# [14] "csat"    "vsat"    "msat"    "percent" "expense" "income"  "high"    "college"
# Correlation Graph
pairs(~csat+vsat+msat,data=states.data, main="Simple Scatterplot Matrix")

library(car)
scatterplotMatrix(~csat+vsat+msat|region, data=states.data,main="Scatterplot")

# 3D Scatterplot
library(scatterplot3d)
scatterplot3d(csat+vsat+msat, main="3D Scatterplot",na.rm=T)
length(csat)
length(vsat)
length(msat)
